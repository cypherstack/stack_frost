/* 
 * This file is part of Stack Wallet.
 * 
 * Copyright (c) 2023 Cypher Stack
 * All Rights Reserved.
 * The code is distributed under GPLv3 license, see LICENSE file for details.
 * Generated by Cypher Stack on 2023-05-26
 *
 */

import 'dart:io';
import 'dart:math';

import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:lottie/lottie.dart';
import 'package:stackfrost/themes/stack_colors.dart';
import 'package:stackfrost/themes/theme_providers.dart';
import 'package:stackfrost/utilities/assets.dart';
import 'package:stackfrost/utilities/text_styles.dart';
import 'package:stackfrost/widgets/background.dart';
import 'package:stackfrost/widgets/conditional_parent.dart';
import 'package:stackfrost/widgets/rounded_container.dart';

class LoadingView extends ConsumerStatefulWidget {
  const LoadingView({
    Key? key,
    this.overridePngImage,
  }) : super(key: key);

  final String? overridePngImage;

  @override
  ConsumerState<LoadingView> createState() => _LoadingViewState();
}

class _LoadingViewState extends ConsumerState<LoadingView>
    with SingleTickerProviderStateMixin {
  late AnimationController _controller;

  CrossFadeState _fadeState = CrossFadeState.showFirst;

  @override
  void initState() {
    _controller = AnimationController(
      duration: const Duration(seconds: 2),
      vsync: this,
    )..repeat();
    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
      setState(() {
        _fadeState = CrossFadeState.showSecond;
      });
    });

    super.initState();
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final size = MediaQuery.of(context).size;
    final width = min(size.width, size.height) * 0.5;

    final assetPath = ref.watch(
      themeProvider.select((value) => value.assets.loadingGif),
    );

    return Background(
      child: Scaffold(
        backgroundColor: Theme.of(context).extension<StackColors>()!.background,
        body: Container(
          color: Theme.of(context).extension<StackColors>()!.background,
          child: Center(
            child: ConditionalParent(
              condition: Theme.of(context).extension<StackColors>()!.themeId ==
                  "oled_black",
              builder: (child) => RoundedContainer(
                color: const Color(0xFFDEDEDE),
                radiusMultiplier: 100,
                width: width * 1.35,
                height: width * 1.35,
                child: child,
              ),
              child: widget.overridePngImage == null
                  ? SizedBox(
                      width: width,
                      child: assetPath != null
                          ? Image.file(
                              File(
                                assetPath,
                              ),
                            )
                          : Lottie.asset(
                              Assets.lottie.test2,
                              animate: true,
                              repeat: true,
                            ),
                    )
                  : Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        RotationTransition(
                          turns:
                              Tween(begin: 0.0, end: 1.0).animate(_controller),
                          child: AnimatedCrossFade(
                            duration: const Duration(seconds: 2),
                            firstChild: SizedBox(
                              width: MediaQuery.of(context).size.width * 0.7,
                              height: MediaQuery.of(context).size.width * 0.7,
                            ),
                            secondChild: Image(
                              image: AssetImage(
                                widget.overridePngImage!,
                              ),
                              width: MediaQuery.of(context).size.width * 0.7,
                            ),
                            crossFadeState: _fadeState,
                          ),
                        ),
                        const SizedBox(
                          height: 32,
                        ),
                        Text(
                          "Stack Frost",
                          style: STextStyles.pageTitleH2(context),
                        ),
                      ],
                    ),
            ),
          ),
        ),
      ),
    );
  }
}
